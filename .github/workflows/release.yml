name: Release
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Build
        run: |
          go install github.com/akavel/rsrc@latest

          rsrc -arch amd64 -manifest soulx.manifest -ico icon/256.ico,icon/128.ico,icon/64.ico,icon/48.ico,icon/32.ico -o soulx_windows_amd64.syso
          rsrc -arch arm64 -manifest soulx.manifest -ico icon/256.ico,icon/128.ico,icon/64.ico,icon/48.ico,icon/32.ico -o soulx_windows_arm64.syso
          rsrc -arch 386 -manifest soulx.manifest -ico icon/256.ico,icon/128.ico,icon/64.ico,icon/48.ico,icon/32.ico -o soulx_windows_386.syso
          rsrc -arch arm -manifest soulx.manifest -ico icon/256.ico,icon/128.ico,icon/64.ico,icon/48.ico,icon/32.ico -o soulx_windows_arm.syso
          
          cd service && make -j releases && cd ..
          
          make -j releases

          curl -L https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb -o Country.mmdb
          curl -L https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geosite.dat -o geosite.dat
          curl -L https://github.com/yaling888/yacd/archive/gh-pages.zip -o yacd-gh-pages.zip
          
          unzip yacd-gh-pages.zip
          mv yacd-gh-pages dashboard
          zip –r dashboard.zip dashboard
          zip Country.mmdb.zip Country.mmdb
          zip geosite.dat.zip geosite.dat
          
          rm -f yacd-gh-pages.zip
          rm -f Country.mmdb
          rm -f geosite.dat
          rm -rf dashboard
          
          cp Country.mmdb.zip geosite.dat.zip dashboard.zip bin/amd64/resources
          cp Country.mmdb.zip geosite.dat.zip dashboard.zip bin/arm64/resources
          cp Country.mmdb.zip geosite.dat.zip dashboard.zip bin/386/resources
          cp Country.mmdb.zip geosite.dat.zip dashboard.zip bin/arm32v7/resources
          
          version=$(git describe --tags --always)
          core_version=$(curl -L https://github.com/yaling888/clash/releases/download/plus_pro/version.txt)
          
          curl -L -o bin/amd64/core/clash-plus-pro-windows-amd64-$core_version.zip https://github.com/yaling888/clash/releases/download/plus_pro/clash-plus-pro-windows-amd64-$core_version.zip
          curl -L -o bin/amd64/core/clash-plus-pro-windows-amd64-v3-$core_version.zip https://github.com/yaling888/clash/releases/download/plus_pro/clash-plus-pro-windows-amd64-v3-$core_version.zip
          curl -L -o bin/arm64/core/clash-plus-pro-windows-arm64-$core_version.zip https://github.com/yaling888/clash/releases/download/plus_pro/clash-plus-pro-windows-arm64-$core_version.zip
          curl -L -o bin/386/core/clash-plus-pro-windows-386-$core_version.zip https://github.com/yaling888/clash/releases/download/plus_pro/clash-plus-pro-windows-386-$core_version.zip
          curl -L -o bin/arm32v7/core/clash-plus-pro-windows-arm32v7-$core_version.zip https://github.com/yaling888/clash/releases/download/plus_pro/clash-plus-pro-windows-arm32v7-$core_version.zip
          
          unzip bin/amd64/core/clash-plus-pro-windows-amd64-v3-$core_version.zip -d bin/amd64/core/
          rm -f bin/amd64/core/clash-plus-pro-windows-amd64-v3-$core_version.zip
          
          unzip bin/arm64/core/clash-plus-pro-windows-arm64-$core_version.zip -d bin/arm64/core/
          rm -f bin/arm64/core/clash-plus-pro-windows-arm64-$core_version.zip
          
          unzip bin/386/core/clash-plus-pro-windows-386-$core_version.zip -d bin/386/core/
          rm -f bin/386/core/clash-plus-pro-windows-386-$core_version.zip
          
          unzip bin/arm32v7/core/clash-plus-pro-windows-arm32v7-$core_version.zip -d bin/arm32v7/core/
          rm -f bin/arm32v7/core/clash-plus-pro-windows-arm32v7-$core_version.zip
          
          cd bin
          
          mv amd64 soulx
          zip –r SoulX-windows-amd64-$version.zip soulx
          rm -f soulx/clash-plus-pro-windows-amd64-v3.exe soulx/clash-plus-pro-windows-amd64-$core_version.zip
          zip –r SoulX-windows-amd64-without-core-$version.zip soulx
          rm -rf soulx
          
          mv arm64 soulx
          zip –r SoulX-windows-arm64-$version.zip soulx
          rm -f soulx/clash-plus-pro-windows-arm64.exe
          zip –r SoulX-windows-arm64-without-core-$version.zip soulx
          rm -rf soulx
          
          mv 386 soulx
          zip –r SoulX-windows-386-$version.zip soulx
          rm -f soulx/clash-plus-pro-windows-386.exe
          zip –r SoulX-windows-386-without-core-$version.zip soulx
          rm -rf soulx
          
          mv arm32v7 soulx
          zip –r SoulX-windows-arm32v7-$version.zip soulx
          rm -f soulx/clash-plus-pro-windows-arm32v7.exe
          zip –r SoulX-windows-arm32v7-without-core-$version.zip soulx
          rm -rf soulx

      - name: Set sha date
        if: startsWith(github.ref, 'refs/tags/') == false
        id: sha_date
        run: |
          echo "::set-output name=file_sha::$(git describe --tags --always)"
          echo "::set-output name=file_date::$(Get-Date -Format 'yyyy-MM-dd')"

      - name: Upload files to Artifacts
        uses: actions/upload-artifact@v2
        if: startsWith(github.ref, 'refs/tags/') == false
        with:
          name: SoulX-windows-amd64-${{ steps.sha_date.outputs.file_sha }}-${{ steps.sha_date.outputs.file_date }}
          path: |
            bin/*

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: bin/*
          draft: true
