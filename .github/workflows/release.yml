name: Release
on: [push]
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Build
        run: |
          go install github.com/akavel/rsrc@latest
          mkdir -p bin/core/py
          mkdir released

          cd service && make windows-amd64 && cd ..

          rsrc -arch amd64 -manifest soulx.manifest -ico icon/32.ico,icon/48.ico,icon/64.ico,icon/128.ico,icon/256.ico -o soulx.syso

          ((Get-Content -path constant/version.go -Raw) -replace 'unknown version',$(git describe --tags --always)) | Set-Content -Path constant/version.go
          ((Get-Content -path constant/version.go -Raw) -replace 'unknown time',$(Get-Date -Format 'yyyy-MM-dd')) | Set-Content -Path constant/version.go

          make windows-amd64

          cd bin/core
          curl -L https://www.python.org/ftp/python/3.9.12/python-3.9.12-embed-amd64.zip -o py39-embed-amd64.zip
          Expand-Archive -Path py39-embed-amd64.zip -DestinationPath py
          
          cd py
          cp python39.zip ../
          cp python39.dll ../
          cd ../
          
          Remove-Item -Force py39-embed-amd64.zip
          Remove-Item -Force -Recurse py
          
          curl -LO https://github.com/yaling888/clash/releases/download/plus/version.txt
          
          $core_version = Get-Content version.txt
          
          curl -LO "https://github.com/yaling888/clash/releases/download/plus/clash-plus-windows-amd64-$core_version.zip"
          curl -LO "https://github.com/yaling888/clash/releases/download/plus/clash-plus-windows-amd64-v3-$core_version.zip"
          
          Expand-Archive -Path "clash-plus-windows-amd64-$core_version.zip" -DestinationPath .
          
          Remove-Item -Force version.txt
          Remove-Item -Force "clash-plus-windows-amd64-$core_version.zip"
          
          cd ../
          
          mkdir resources
          cd resources
          
          curl -L https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb -o Country.mmdb
          curl -L https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geosite.dat -o geosite.dat
          curl -L https://github.com/yaling888/yacd/archive/gh-pages.zip -o yacd-gh-pages.zip
          
          Expand-Archive -Path yacd-gh-pages.zip -DestinationPath .
          
          Rename-Item yacd-gh-pages dashboard
          
          Compress-Archive -Path Country.mmdb -DestinationPath Country.mmdb.zip
          Compress-Archive -Path geosite.dat -DestinationPath geosite.dat.zip
          Compress-Archive -Path dashboard -DestinationPath dashboard.zip
          
          Remove-Item -Force Country.mmdb
          Remove-Item -Force geosite.dat
          Remove-Item -Force yacd-gh-pages.zip
          Remove-Item -Force -Recurse dashboard/
          
          cd ../../
          
          Rename-Item bin soulx && cd soulx
          Compress-Archive -Path . -DestinationPath ../released/SoulX-windows-amd64-$(git describe --tags --always).zip

      - name: Set sha date
        id: sha_date
        run: |
          echo "::set-output name=file_sha::$(git describe --tags --always)"
          echo "::set-output name=file_date::$(Get-Date -Format 'yyyy-MM-dd')"

      - name: Upload files to Artifacts
        uses: actions/upload-artifact@v2
        if: startsWith(github.ref, 'refs/tags/') == false
        with:
          name: SoulX-windows-amd64-${{ steps.sha_date.outputs.file_sha }}-${{ steps.sha_date.outputs.file_date }}
          path: |
            released/*

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: released/*
          draft: true
